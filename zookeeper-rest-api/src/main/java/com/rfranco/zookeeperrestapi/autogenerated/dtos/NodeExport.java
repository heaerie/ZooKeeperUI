package com.rfranco.zookeeperrestapi.autogenerated.dtos;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.rfranco.zookeeperrestapi.autogenerated.dtos.NodeExport;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import javax.validation.Valid;
import javax.validation.constraints.*;

/**
 * NodeExport
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2017-11-24T13:56:03.982+01:00")

public class NodeExport   {
  @JsonProperty("name")
  private String name = null;

  @JsonProperty("value")
  private String value = null;

  @JsonProperty("children")
  private List<NodeExport> children = new ArrayList<NodeExport>();

  public NodeExport name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The name of the node (last segment of the path).
   * @return name
  **/
  @ApiModelProperty(example = "serverPort", required = true, value = "The name of the node (last segment of the path).")
  @NotNull


  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public NodeExport value(String value) {
    this.value = value;
    return this;
  }

   /**
   * The value of the node.
   * @return value
  **/
  @ApiModelProperty(example = "1256", value = "The value of the node.")


  public String getValue() {
    return value;
  }

  public void setValue(String value) {
    this.value = value;
  }

  public NodeExport children(List<NodeExport> children) {
    this.children = children;
    return this;
  }

  public NodeExport addChildrenItem(NodeExport childrenItem) {
    this.children.add(childrenItem);
    return this;
  }

   /**
   * The value of the node.
   * @return children
  **/
  @ApiModelProperty(required = true, value = "The value of the node.")
  @NotNull

  @Valid

  public List<NodeExport> getChildren() {
    return children;
  }

  public void setChildren(List<NodeExport> children) {
    this.children = children;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NodeExport nodeExport = (NodeExport) o;
    return Objects.equals(this.name, nodeExport.name) &&
        Objects.equals(this.value, nodeExport.value) &&
        Objects.equals(this.children, nodeExport.children);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, value, children);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NodeExport {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("    children: ").append(toIndentedString(children)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

