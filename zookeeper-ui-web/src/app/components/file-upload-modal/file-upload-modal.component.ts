import { Component, OnInit, EventEmitter, Output } from '@angular/core';
import { NodeExport } from '../../autogenerated/model/NodeExport';
import { AlertList, Alert, AlertType} from '../alerts/alerts.component';

export interface UploadOptions {
  node: NodeExport;
  prune: boolean;
  overwriteValues: boolean;
}

@Component({
  selector: 'app-file-upload-modal',
  templateUrl: './file-upload-modal.component.html',
  styleUrls: ['./file-upload-modal.component.css']
})
export class FileUploadModalComponent implements OnInit {
  @Output() onFileLoaded = new EventEmitter<UploadOptions>();
  nodePath: string;
  file: File;
  alerts: AlertList;
  prune: boolean;
  overwriteValues: boolean;

  constructor() {
    this.alerts = new AlertList();
  }

  ngOnInit() {
    this.prune = false;
    this.overwriteValues = true;
  }

  onSelectedFileChanged(event) {
    this.file = event.srcElement.files[0];
  }

  startUpload() {
    let fileReader = new FileReader();
    fileReader.onload = this.onLoad.bind(this);
    fileReader.onerror = this.onError.bind(this);
    fileReader.readAsText(this.file);
  }

  onError(event) {
    this.alerts.addAlert({
      message: "It was not possible to read the selected file: " +  event.target.error.name,
      alertType: AlertType.Error
    });
  }

  onLoad(event) {
    this.onFileLoaded.emit({
      node: JSON.parse(event.target.result),
      prune: this.prune,
      overwriteValues: this.overwriteValues
    });
  }
}
