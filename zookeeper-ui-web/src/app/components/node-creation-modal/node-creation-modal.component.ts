import { Component, OnInit,  EventEmitter, Input, Output } from '@angular/core';
import { BsModalRef } from 'ngx-bootstrap/modal/bs-modal-ref.service';
import { ConfigApi } from '../../autogenerated/api/ConfigApi';
import { Node } from '../../model/Node';
import { Alert } from '../alerts/alerts.component';

@Component({
  selector: 'app-node-creation-modal',
  templateUrl: './node-creation-modal.component.html',
  styleUrls: ['./node-creation-modal.component.css']
})
export class NodeCreationModalComponent implements OnInit {
  @Input() parentNode: Node;
  @Output() onAlert = new EventEmitter<Alert>();
  newNodeName: string;

  constructor(public modalRef: BsModalRef, private _configApi:ConfigApi) {}

  ngOnInit() {
  }

  addNode() {
    this._configApi.addNodeChild(this.parentNode.path, { name: this.newNodeName }).subscribe(
      data => {
        this.parentNode.addChildNode(this.newNodeName);
      },
      error => {
        this.onAlert.emit(Alert.fromHttpResponse(error));
      }
    );
    this.modalRef.hide();
  }

  onKeyUp(event) {
    // The pressed key is enter
    if (event.keyCode == 13) {
      this.addNode();
    }

    // The pressed key is escape
    if (event.keyCode == 27) {
      this.modalRef.hide();
    }
  }
}
